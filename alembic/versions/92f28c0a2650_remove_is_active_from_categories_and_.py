"""Remove is_active from categories and subcategories

Revision ID: 92f28c0a2650
Revises: 6927b39cf9d2
Create Date: 2025-09-28 03:01:45.049713

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '92f28c0a2650'
down_revision: Union[str, Sequence[str], None] = '6927b39cf9d2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_item_subgroups_group_id'), table_name='item_subgroups')
    op.drop_index(op.f('ix_item_subgroups_id'), table_name='item_subgroups')
    op.drop_index(op.f('ix_item_subgroups_name'), table_name='item_subgroups')
    op.drop_index(op.f('ix_item_subgroups_public_id'), table_name='item_subgroups')
    op.drop_table('item_subgroups')
    op.drop_index(op.f('ix_item_groups_id'), table_name='item_groups')
    op.drop_index(op.f('ix_item_groups_name'), table_name='item_groups')
    op.drop_index(op.f('ix_item_groups_public_id'), table_name='item_groups')
    op.drop_table('item_groups')
    op.drop_column('categories', 'is_active')
    op.add_column('items', sa.Column('full_description', sa.Text(), nullable=True))
    op.add_column('items', sa.Column('internal_code', sa.String(), nullable=True))
    op.add_column('items', sa.Column('presentation', sa.String(), nullable=True))
    op.add_column('items', sa.Column('sample', sa.Integer(), nullable=True))
    op.add_column('items', sa.Column('has_catalog', sa.Boolean(), nullable=False))
    op.add_column('items', sa.Column('questions', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.drop_index(op.f('ix_items_brand'), table_name='items')
    op.drop_index(op.f('ix_items_sku'), table_name='items')
    op.create_index(op.f('ix_items_internal_code'), 'items', ['internal_code'], unique=True)
    op.drop_column('items', 'unit_of_measure')
    op.drop_column('items', 'maximum_stock')
    op.drop_column('items', 'sku')
    op.drop_column('items', 'minimum_stock')
    op.drop_column('items', 'brand')
    op.drop_column('subcategories', 'is_active')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('subcategories', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('items', sa.Column('brand', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('minimum_stock', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('sku', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('maximum_stock', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('items', sa.Column('unit_of_measure', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_items_internal_code'), table_name='items')
    op.create_index(op.f('ix_items_sku'), 'items', ['sku'], unique=True)
    op.create_index(op.f('ix_items_brand'), 'items', ['brand'], unique=False)
    op.drop_column('items', 'questions')
    op.drop_column('items', 'has_catalog')
    op.drop_column('items', 'sample')
    op.drop_column('items', 'presentation')
    op.drop_column('items', 'internal_code')
    op.drop_column('items', 'full_description')
    op.add_column('categories', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_table('item_groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('item_groups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='item_groups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_item_groups_public_id'), 'item_groups', ['public_id'], unique=True)
    op.create_index(op.f('ix_item_groups_name'), 'item_groups', ['name'], unique=False)
    op.create_index(op.f('ix_item_groups_id'), 'item_groups', ['id'], unique=False)
    op.create_table('item_subgroups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['item_groups.id'], name=op.f('item_subgroups_group_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('item_subgroups_pkey'))
    )
    op.create_index(op.f('ix_item_subgroups_public_id'), 'item_subgroups', ['public_id'], unique=True)
    op.create_index(op.f('ix_item_subgroups_name'), 'item_subgroups', ['name'], unique=False)
    op.create_index(op.f('ix_item_subgroups_id'), 'item_subgroups', ['id'], unique=False)
    op.create_index(op.f('ix_item_subgroups_group_id'), 'item_subgroups', ['group_id'], unique=False)
    # ### end Alembic commands ###
